# main.py

import pandas as pd
import xgboost as xgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, precision_score, recall_score, roc_auc_score

# Load dataset
df = pd.read_csv('data/cleaned_churn_data.csv')  # Make sure this path matches your actual file

# Encode target variable
df['Churn'] = df['Churn'].map({'Yes': 1, 'No': 0})

# Separate features and target
X = df.drop('Churn', axis=1)
y = df['Churn']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, stratify=y, random_state=42
)

# Initialize and train model
model = xgb.XGBClassifier(
    use_label_encoder=False,
    eval_metric='logloss',
    random_state=42
)
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate performance
print("Model Evaluation:")
print(f"Accuracy   : {accuracy_score(y_test, y_pred):.2f}")
print(f"Precision  : {precision_score(y_test, y_pred):.2f}")
print(f"Recall     : {recall_score(y_test, y_pred):.2f}")
print(f"ROC-AUC    : {roc_auc_score(y_test, y_pred):.2f}")
